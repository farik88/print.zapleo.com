<?php

namespace backend\core\base;

use common\models\LangMessage;
use common\models\SourceLangMessage;
use yii\web\ErrorHandler;

/**
 * Created by PhpStorm.
 * User: decadal
 * Date: 22.05.17
 * Time: 10:12
 */
class BackendController extends BaseController
{
    /**
     *
     */
    public function init()
    {
        parent::init();
        $handler = new ErrorHandler(['errorAction' => '/site/error']);
        \Yii::$app->set('errorHandler', $handler);
        //\Yii::$app->urlManager->baseUrl = \Yii::getAlias('@backurl');
        $handler->register();
    }

    /**
     * @return string
     */
    public function actionError()
    {
        $exception = \Yii::$app->errorHandler->exception;
        if ($exception !== null) {
            return $this->render('/site/error404', ['exception' => $exception]);
        }
    }

    /**
     * @inheritdoc
     */
    public function beforeAction($action)
    {
        if(\Yii::$app->user->getIsGuest()) {
            $this->redirect('/site/login');
            return false;
        }

        if (($id = $this->getUserId())) {
            $ac = \backend\models\base\AccessUser::find()
                ->select(['access_id'])
                ->where(['user_id'=>$id])
                ->asArray()
                ->all();
            if(empty($ac)) {
                return false;
            }
        }
        //todo insert to cache
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @param     $model
     * @param     $model_msg
     * @param int $create
     */
    public function save_translate($model, $model_msg)
    {
        $translations = \Yii::$app->request->post('translations', false);
        if (!empty($translations)) {
            foreach ($translations as $field => $translation) {
                $model_msg->message = $model->{$field};

                if (empty($model_msg->id)) {
                    $model_msg->category = 'backend_' . $model::tableName() . '_' . $field;
                    $model_msg->owner_id = $model->id;
                }

                if ($model_msg->save()) {
                    LangMessage::updateTranslationsFromArray($model_msg->id, $translation);
                }
            }
        }
    }
    
}